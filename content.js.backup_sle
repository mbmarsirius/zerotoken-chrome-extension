/* -----------------------------------------------------------
   ZeroToken â€” content.js (sleek CTA v2)
   - CTA: 48px height, 36px icon, text slightly left aligned
------------------------------------------------------------*/

(function injectModuleOnce(){
  if (document.querySelector('script[data-zt-bundle="1"]')) return;
  const s = document.createElement("script");
  s.type = "module";
  s.dataset.ztBundle = "1";
  s.src = chrome.runtime.getURL("bundle.js");
  document.documentElement.appendChild(s);
})();

(function brandingUI(){
  const iconURL      = chrome.runtime.getURL("assets/zerotokenlogotrans.png");
  const wordmarkURL  = chrome.runtime.getURL("assets/ZeroToken Trans.png");
  const cornerURL    = chrome.runtime.getURL("assets/ZT black bckgrn.png");
  const marsiriusURL = chrome.runtime.getURL("assets/marsiriusjustlogo.png");

  const panel = () => document.getElementById("zt-panel") || document.querySelector(".zt-panel");

  function apply(){
    const root = panel();
    if (!root || root.dataset.ztBrandingApplied === "1") return false;
    root.dataset.ztBrandingApplied = "1";

    const css = document.createElement("style");
    css.textContent = `
      #zt-panel{
        background:#000 !important;
        border:1px solid rgba(255,255,255,.08) !important;
        border-radius:16px !important;
        position:relative; overflow:hidden;
      }
      #zt-panel .zt-corner{
        position:absolute; left:12px; top:10px; height:28px; width:auto; opacity:.95;
      }
      #zt-panel .zt-wordmark{ height:20px; width:auto; display:block; }
      #zt-token-fig{ margin-top:2px !important; }
      #zt-panel .card, #zt-panel .box{
        background:#0b0b0b !important;
        border:1px solid rgba(255,255,255,.06) !important;
        border-radius:12px !important;
      }

      /* Sleek CTA */
      #zt-panel #zt-handoff-btn{
        background:#c1ff72 !important;
        color:#071004 !important;
        border:0 !important;
        border-radius:18px !important;
        height:48px !important;
        padding:0 14px !important;
        width:100% !important;
        display:grid !important;
        grid-template-columns:44px 1fr; /* icon + label area */
        align-items:center !important;
        font-weight:800 !important;
        font-size:16px !important;
        letter-spacing:.2px;
        box-shadow:0 6px 16px rgba(193,255,114,.25) !important;
        transition: transform .12s ease-in-out;
      }
      #zt-panel #zt-handoff-btn:hover{ transform: translateY(-1px); }
      #zt-panel .zt-cta-icon{
        height:36px; width:auto;
        justify-self:start; margin-left:2px;
      }
      #zt-panel #zt-handoff-btn span{
        justify-self:start; /* text a bit left */
        margin-left:-6px;   /* optical adjustment */
      }

      #zt-hint{ display:none !important; }
      #zt-brand-footer{
        display:flex; align-items:center; justify-content:center;
        gap:12px; margin-top:12px;
        font-size:13px; opacity:.95; color:#eaf7ff;
      }
      #zt-brand-footer img{ height:34px; width:auto; }
    `;
    root.prepend(css);

    if (!root.querySelector(".zt-corner")) {
      const emblem = document.createElement("img");
      emblem.className = "zt-corner";
      emblem.src = cornerURL; emblem.alt = "";
      root.prepend(emblem);
    }

    const headerRow = root.querySelector(":scope > div:first-child");
    if (headerRow) {
      const leftCell = headerRow.querySelector(":scope > div:first-child");
      if (leftCell) leftCell.innerHTML = `<img class="zt-wordmark" src="${wordmarkURL}" alt="ZeroToken">`;
    }

    const btn = root.querySelector("#zt-handoff-btn");
    if (btn) {
      btn.innerHTML = `<img class="zt-cta-icon" src="${iconURL}" alt=""> <span>Generate Handoff</span>`;
    }

    if (!document.getElementById("zt-brand-footer")) {
      const brand = document.createElement("div");
      brand.id = "zt-brand-footer";
      brand.innerHTML = `<img src="${marsiriusURL}" alt="Marsirius"> <span>Created & Powered by Marsirius AI Labs</span>`;
      const hint = root.querySelector("#zt-hint");
      if (hint && hint.parentNode) hint.insertAdjacentElement("afterend", brand);
      else root.appendChild(brand);
    }
    return true;
  }

  if (apply()) return;
  let tries = 0;
  const t = setInterval(()=>{ if (apply() || ++tries > 60) clearInterval(t); }, 250);
})();
